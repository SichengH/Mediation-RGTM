#invastigate if the adjustment works or not using simulation
sd(data$ldlc12m)
sd(data$ldlcm)
data.sub<-data%>%filter(drug==0)
sd(data.sub$ldlc12m)
sigma.l<-14.2
sigma.u<-16
lambda<- sigma.l^2 / (sigma.l^2 + sigma.u^2) #0.44
theta1<-fit1$yreg_fit$coefficients[2]
theta2<-fit1$yreg_fit$coefficients[3]
beta1<-fit1$mreg_fit$coefficients[2]
theta1_adj<- theta1 - theta2 * ((1/lambda)-1)*beta1
theta2_adj<- theta2 / lambda
n<-1000
t<-c(rep(0,n/2),rep(1,n/2))
alpha<-10
x0<- rnorm(n,2,2)#uniform will cause difference
x<-x0+alpha*t
beta0<-2
beta1<-3
beta2<-4
y<-beta0+beta1*t+beta2*x+rnorm(n,0,1)
w1<-x0+rnorm(n,0,1)
w2<-x+rnorm(n,0,1)
d1<-data.frame(y,t,w1,x,x0,label = "truth")
d2<-data.frame(y,t,w1,x = w2,x0 = x,label = "measured_b")
d<-rbind(d1,d2)
ggplot(data = d)+
geom_point(aes(x,y,col = label),alpha = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
facet_wrap(~t)
d.sub<-d%>%filter(w1<2)%>%filter(label=="measured_b")
d.sub$label<-"measured.w/.cutoff"
d<-rbind(d,d.sub)
ggplot(data = d)+
geom_point(aes(x,y,col = label),alpha = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
facet_wrap(~t)
hist(d0.sub$w1)
d0.sub<-d.sub%>%filter(t==0)
hist(d0.sub$w1)
hist(d0.sub$x)
hist(d0.sub$x0)
ggplot(data = d0.sub)+geom_histogram(aes(x = w))
ggplot(data = d0.sub)+geom_histogram(aes(x = w1))
ggplot(data = d0.sub)+geom_histogram(aes(x = w1,color = label))
ggplot(data = d0.sub)+geom_histogram(aes(x = w1),col = "red")
ggplot(data = d0.sub)+
geom_histogram(aes(x = w1),col = "red")+
geom_histogram(aes(x = x),col = "blue")
ggplot(data = d0.sub)+
geom_histogram(aes(x = w1),col = "red",fill = "white")+
geom_histogram(aes(x = x),col = "blue",fill = "white")
# observed regression toward the mean
ggplot(data = d0.sub)+
geom_histogram(aes(x = w1),col = "red",fill = "white",bins = 100)+
geom_histogram(aes(x = x),col = "blue",fill = "white",bins = 100)
# observed regression toward the mean
ggplot(data = d0.sub)+
geom_histogram(aes(x = w1),col = "red",fill = "white",bins = 50)+
geom_histogram(aes(x = x),col = "blue",fill = "white",bins = 50)
df<-rbind(data.frame(x = d0.sub$w1,label = "baseline"),
data.frame(x = d0.sub$x,label = "follow-up"))
# observed regression toward the mean
ggplot(data = d0.sub)+
geom_histogram(aes(x = w1,color = label),col = "red",fill = "white",bins = 50)+
ggtitle()
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = w1,color = label),col = "red",fill = "white",bins = 50)+
ggtitle()
df<-rbind(data.frame(x = d0.sub$w1,label = "baseline"),
data.frame(x = d0.sub$x,label = "follow-up"))
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = w1,color = label),col = "red",fill = "white",bins = 50)+
ggtitle()
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = w1,color = label),fill = "white",bins = 50)+
ggtitle()
View(df)
df<-rbind(data.frame(x = d0.sub$w1,label = "baseline"),
data.frame(x = d0.sub$x,label = "follow-up"))
df$label<-as.factor(df$label)
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = w1,color = label),fill = "white",bins = 50)+
ggtitle()
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = x,color = label),fill = "white",bins = 50)+
ggtitle()
df<-rbind(data.frame(x = d0.sub$w1,label = "baseline"),
data.frame(x = d0.sub$x,label = "follow-up"))
df$label<-as.factor(df$label)
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = x,color = label),fill = "white",bins = 50)+
ggtitle()
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = x,color = label),fill = "white",bins = 50)+
ggtitle("d")
true.slope<-NULL
true.intercept<-NULL
true.t<-NULL
m.slope<-NULL
m.intercept<-NULL
m.t<-NULL
ms.slope<-NULL
ms.intercept<-NULL
ms.t<-NULL
sigma2.xs<-NULL
lambda.est<-NULL
for(i in 1:1000){
n<-1000
t<-c(rep(0,n/2),rep(1,n/2))
alpha<-10
x0<- rnorm(n,2,2)#uniform will cause difference
x<-x0+alpha*t
beta0<-2
beta1<-3
beta2<-4
y<-beta0+beta1*t+beta2*x+rnorm(n,0,1)
w1<-x0+rnorm(n,0,1)
w2<-x+rnorm(n,0,1)
d1<-data.frame(y,t,w1,x,x0,label = "truth")
d2<-data.frame(y,t,w1,x = w2,x0 = x,label = "measured_b")
d<-rbind(d1,d2)
ggplot(data = d)+
geom_point(aes(x,y,col = label),alpha = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
facet_wrap(~t)
d.sub<-d%>%filter(w1<2)%>%filter(label=="measured_b")
d.sub$label<-"measured.w/.cutoff"
d<-rbind(d,d.sub)
# ggplot(data = d)+
#   geom_point(aes(x,y,col = label),alpha = 0.2)+
#   geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
#   facet_wrap(~t)
d0.sub<-d.sub%>%filter(t==0)
sigma2.x<-var(d0.sub$x0)
sigma2.xs[i]<-sigma2.x
sigma2.u<-1
lambda.est[i]<-sigma2.x / (sigma2.u + sigma2.x)
## With numbers, cut off play a role
fit1<-lm(y~x+t,data = d%>%filter(label == "truth"))
fit2<-lm(y~x+t,data = d%>%filter(label == "measured_b"))
fit3<-lm(y~x+t,data = d%>%filter(label == "measured.w/.cutoff"))
true.intercept[i]<-fit1$coefficients[1]
true.slope[i]<-fit1$coefficients[2]
true.t[i]<-fit1$coefficients[3]
m.intercept[i]<-fit2$coefficients[1]
m.slope[i]<-fit2$coefficients[2]
m.t[i]<-fit2$coefficients[3]
ms.intercept[i]<-fit3$coefficients[1]
ms.slope[i]<-fit3$coefficients[2]
ms.t[i]<-fit3$coefficients[3]
}
df<-rbind(data.frame(x = d0.sub$w1,label = "baseline"),
data.frame(x = d0.sub$x,label = "follow-up"),
data.frame(x = d0.sub$x0,label = "truth"))
df$label<-as.factor(df$label)
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = x,color = label),fill = "white",bins = 50)+
ggtitle("Baseline vs follow-up with truncation")
n<-10000
t<-c(rep(0,n/2),rep(1,n/2))
alpha<-10
x0<- rnorm(n,2,2)#uniform will cause difference
x<-x0+alpha*t
beta0<-2
beta1<-3
beta2<-4
y<-beta0+beta1*t+beta2*x+rnorm(n,0,1)
w1<-x0+rnorm(n,0,1)
w2<-x+rnorm(n,0,1)
d1<-data.frame(y,t,w1,x,x0,label = "truth")
d2<-data.frame(y,t,w1,x = w2,x0 = x,label = "measured_b")
d<-rbind(d1,d2)
ggplot(data = d)+
geom_point(aes(x,y,col = label),alpha = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
facet_wrap(~t)
ggplot(data = d)+
geom_point(aes(x,y,col = label),alpha = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
facet_wrap(~t)
d.sub<-d%>%filter(w1<2)%>%filter(label=="measured_b")
d.sub<-d%>%filter(w1<2)%>%filter(label=="measured_b")
d.sub$label<-"measured.w/.cutoff"
d<-rbind(d,d.sub)
ggplot(data = d)+
geom_point(aes(x,y,col = label),alpha = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
facet_wrap(~t)+
ggtitle("")
d0.sub<-d.sub%>%filter(t==0)
df<-rbind(data.frame(x = d0.sub$w1,label = "baseline"),
data.frame(x = d0.sub$x,label = "follow-up"),
data.frame(x = d0.sub$x0,label = "truth"))
df$label<-as.factor(df$label)
# observed regression toward the mean
ggplot(data = df)+
geom_histogram(aes(x = x,color = label),fill = "white",bins = 100)+
ggtitle("Baseline vs follow-up vs trugh with truncation on baseline")
df<-rbind(data.frame(value = true.slope,label = "truth"),
# data.frame(value = m.slope/lambda,label = "adjusted.measured"),
# data.frame(value = m.slope,label = "measured "),
data.frame(value = ms.slope,label = "truncted measurements"),
data.frame(value = ms.slope/lambda,label = "adjusted truncted measurements"),
data.frame(value = ms.slope/lambda.m,label = "new adjusted truncted measurements"))
sigma2.x<-4
sigma2.u<-1
lambda<-sigma2.x / (sigma2.u + sigma2.x) #0.8
lambda.m<-mean(lambda.est)#~0.6611
df<-rbind(data.frame(value = true.slope,label = "truth"),
# data.frame(value = m.slope/lambda,label = "adjusted.measured"),
# data.frame(value = m.slope,label = "measured "),
data.frame(value = ms.slope,label = "truncted measurements"),
data.frame(value = ms.slope/lambda,label = "adjusted truncted measurements"),
data.frame(value = ms.slope/lambda.m,label = "new adjusted truncted measurements"))
ggplot(data = df)+
geom_histogram(aes(x = value,color = label),fill = "white",bins = 100)+
ggtitle("X normal, indepedent from Z")
true.slope<-NULL
true.intercept<-NULL
true.t<-NULL
m.slope<-NULL
m.intercept<-NULL
m.t<-NULL
ms.slope<-NULL
ms.intercept<-NULL
ms.t<-NULL
sigma2.xs<-NULL
lambda.est<-NULL
beta1<-NULL
for(i in 1:1000){
n<-1000
t<-c(rep(0,n/2),rep(1,n/2))
beta1<-10
x0<- rnorm(n,2,2)#uniform will cause difference
x<-x0+beta1*t
theta0<-2
theta1<-3
theta2<-4
y<-theta0+theta1*t+theta2*x+rnorm(n,0,1)
w1<-x0+rnorm(n,0,1)
w2<-x+rnorm(n,0,1)
d1<-data.frame(y,t,w1,x,x0,label = "truth")
d2<-data.frame(y,t,w1,x = w2,x0 = x,label = "measured_b")
d<-rbind(d1,d2)
ggplot(data = d)+
geom_point(aes(x,y,col = label),beta1 = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
facet_wrap(~t)
d.sub<-d%>%filter(w1<2)%>%filter(label=="measured_b")
d.sub$label<-"measured.w/.cutoff"
d<-rbind(d,d.sub)
# ggplot(data = d)+
#   geom_point(aes(x,y,col = label),beta1 = 0.2)+
#   geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
#   facet_wrap(~t)
d0.sub<-d.sub%>%filter(t==0)
sigma2.x<-var(d0.sub$x0)
sigma2.xs[i]<-sigma2.x
sigma2.u<-1
lambda.est[i]<-sigma2.x / (sigma2.u + sigma2.x)
## With numbers, cut off play a role
fit.m<-lm(x~t,data = d%>%filter(label == "measured.w/.cutoff"))
fit1<-lm(y~x+t,data = d%>%filter(label == "truth"))
fit2<-lm(y~x+t,data = d%>%filter(label == "measured_b"))
fit3<-lm(y~x+t,data = d%>%filter(label == "measured.w/.cutoff"))
beta1[i]<-fit.m$coefficients[2]
true.intercept[i]<-fit1$coefficients[1]
true.slope[i]<-fit1$coefficients[2]
true.t[i]<-fit1$coefficients[3]
m.intercept[i]<-fit2$coefficients[1]
m.slope[i]<-fit2$coefficients[2]
m.t[i]<-fit2$coefficients[3]
ms.intercept[i]<-fit3$coefficients[1]
ms.slope[i]<-fit3$coefficients[2]
ms.t[i]<-fit3$coefficients[3]
}
library(ggplot2)
library(dplyr)
library(data.table)
library(survival)
library(DiagrammeR)
library(regmedint)
simulation.function.v6<-function(sample.size = 20000,cutoff = 1000){
n<-sample.size/2
osp = 2
n0<-0
n1<-0
data0<-NULL
data1<-NULL
#control arm
for(i in 1:100){
#print(i)
if(n0<n){
ldlcm=rnorm(n = n*osp,mean = 116,sd = 14.2)#mean distribution of LDLC
d0<-data.frame(ldlcm,ldlcb=rnorm(n = n*osp,mean = ldlcm,sd = 16))
d0<-d0%>%filter(ldlcb<cutoff)
data0<-rbind(data0,d0)
n0<-nrow(data0)
} else {
break
}
}
data0<-data0[1:n,]
#data0$ldlc12m<-data0$ldlcm+rnorm(n,0,10)#12m has higher variacne then ldlcm due to possible life style change after entering the trial
data0$ldlc12m<-data0$ldlcm
data0$ldlc12<-rnorm(n = n,mean = data0$ldlc12m,sd = 16)
#treatment arm
for(i in 1:100){
#print(i)
if(n1<n){
ldlcm=rnorm(n = n*osp,mean = 116,sd = 14.2)
d1<-data.frame(ldlcm,ldlcb=rnorm(n = n*osp,mean = ldlcm,sd = 16))
d1<-d1%>%filter(ldlcb<cutoff)
data1<-rbind(data1,d1)
n1<-nrow(data1)
} else {
break
}
}
data1<-data1[1:n,]
data1$ldlc12m<-data1$ldlcm - 47
data1$ldlc12<-data1$ldlc12m + rnorm(n,0,16)
data0$drug = 0
data1$drug = 1
data = rbind(data0,data1)
data<-data%>%mutate(ldlc_change = ldlc12 - ldlcb)
return(data)
}
#Set Up
p<<-1.4
#outcome regression AFT
t.theta0<<-7.5
t.theta1<<-0.0 #direct effect, positive is protective
t.theta2<<--0.015  #effect * ldlc_change; negative is protective
t.theta3<<-0.02 # ldlc_change * drug assume no effect (0 or 0.02)
t.theta4<<- 0# cov
# theta0_ni<<-7.7
# theta1_ni<<-0.59
# theta2_ni<<-0.0032 #should be negative
cutoff<-c(90,110,130,150,1000)
data<-simulation.function.v6(20000,cutoff = cutoff[5])# 3 variance, population, mean change, Um
data$cen<-rep(1,20000)
data$y1<-rweibull(20000,shape = 1/p,scale = exp(t.theta0+t.theta1*data$drug+
t.theta2*data$ldlc12m+
t.theta3*data$ldlc12m*data$drug
# t.theta4*data$ldlcb
))
fit1<-regmedint(data = data,
## Variables
yvar = "y1",
avar = "drug",
mvar = "ldlc12",
#cvar = c("ldlcb"),
cvar = NULL,
eventvar = "cen",
## Values at which effects are evaluated
a0 = 0,
a1 = 1,
m_cde = 0,
c_cond = NULL,
## Model types
mreg = "linear",
#yreg = "survCox",
yreg = "survAFT_weibull",
## Additional specification
interaction = F,
casecontrol = FALSE)
summ<-summary(fit1)
summ
n<-1000
rd11<-NULL
set.seed(1)
for(j in 1:n){
tryCatch({
print(paste("1",j))
e1.te2<-NULL
e1.te<-NULL
e1.pnde<-NULL
e1.tnde<-NULL
e1.pnie<-NULL
e1.tnie<-NULL
e1.pm<-NULL
e1.beta0<-NULL
e1.beta1<-NULL
e1.beta2<-NULL
e1.sigma<-NULL
e1.theta1<-NULL
e1.theta2<-NULL
e1.theta3<-NULL
e1.theta4<-NULL
cutoff<-c(90,110,130,150,1000)
for(i in 1:5){
data<-simulation.function.v6(20000,cutoff = cutoff[i])
data$cen<-rep(1,20000)
data$y1<-rweibull(20000,shape = 1/p,scale = exp(t.theta0+t.theta1*data$drug+
t.theta2*data$ldlc12m+
t.theta3*data$ldlc12m*data$drug))
fit1<-regmedint(data = data,
## Variables
yvar = "y1",
avar = "drug",
mvar = "ldlc12",
cvar = NULL,
eventvar = "cen",
## Values at which effects are evaluated
a0 = 0,
a1 = 1,
m_cde = 0,
c_cond = NULL,
## Model types
mreg = "linear",
#yreg = "survCox",
yreg = "survAFT_weibull",
## Additional specification
interaction = F,
casecontrol = FALSE)
summ1<-summary(fit1)
te.fit<-survreg(Surv(y1,cen)~drug+ldlcb,data = data,dist = "weibull")
e1.te2[i]<-te.fit$coefficients[2]
e1.te[i]<-summ1$summary_myreg[6]
e1.pnde[i]<-summ1$summary_myreg[2]
e1.tnie[i]<-summ1$summary_myreg[3]
e1.tnde[i]<-summ1$summary_myreg[4]
e1.pnie[i]<-summ1$summary_myreg[5]
e1.pm[i]<-summ1$summary_myreg[7]
e1.beta0[i]<-fit1$mreg_fit$coefficients[1]
e1.beta1[i]<-fit1$mreg_fit$coefficients[2]
# e1.beta2[i]<-fit1$mreg_fit$coefficients[3]
e1.sigma[i]<-summ1$summary_mreg_fit$sigma
e1.theta1[i]<-fit1$yreg_fit$coefficients[2]
e1.theta2[i]<-fit1$yreg_fit$coefficients[3]
e1.theta3[i]<-fit1$yreg_fit$coefficients[4]
# e1.theta4[i]<-fit1$yreg_fit$coefficients[4]
}
results<-data.frame(cutoff,
e1.te2,e1.te,e1.pnde,e1.tnie,e1.tnde,e1.pnie,e1.pm,
e1.beta0,e1.beta1,e1.sigma,
e1.theta1,e1.theta2,e1.theta3,
interaction = 1)
results$iter<-j
rd11<-rbind(rd11,results)
}, error=function(e){} )
}
setwd("/Users/sh/Documents/GitHub/Mediation-RGTM/")
fwrite(rd11,file = "v3-0.csv")
library(ggplot2)
library(dplyr)
true.slope<-NULL
true.intercept<-NULL
m.slope<-NULL
m.intercept<-NULL
ms.slope<-NULL
ms.intercept<-NULL
for(i in 1:1000){
#print(i)
n<-1000
alpha<-1
t<-c(rep(0,n/2),rep(1,n/2))
x<- rnorm(n,2,2) + alpha*t #uniform will cause difference
beta0<-2
beta1<-4
y<-beta0+beta1*x+rnorm(n,0,1)
w<-x+rnorm(n,0,1)#w and y bi-variate normal
d1<-data.frame(y,x,label = "truth")
d2<-data.frame(y,x = w,label = "measured")
d<-rbind(d1,d2)
ggplot(data = d)+
geom_point(aes(x,y,col = label),alpha = 0.2)+
geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")+
ggtitle("X normally distributed")
d.sub<-d%>%filter(x<2)%>%filter(label=="measured")
d.sub$label<-"measured.w/.cutoff"
d<-rbind(d,d.sub)
# ggplot(data = d)+
#   geom_point(aes(x,y,col = label),alpha = 0.2)+
#   geom_smooth(aes(x,y,col = label),method = "lm",formula = "y~x")
## With numbers
fit1<-lm(y~x,data = d%>%filter(label == "truth"))
fit2<-lm(y~x,data = d%>%filter(label == "measured"))
fit3<-lm(y~x,data = d%>%filter(label == "measured.w/.cutoff"))
true.intercept[i]<-fit1$coefficients[1]
true.slope[i]<-fit1$coefficients[2]
m.intercept[i]<-fit2$coefficients[1]
m.slope[i]<-fit2$coefficients[2]
ms.intercept[i]<-fit3$coefficients[1]
ms.slope[i]<-fit3$coefficients[2]
}
summary(true.slope)
summary(m.slope)
summary(ms.slope)
sigma2.x<-4
sigma2.u<-1
lambda<-sigma2.x / (sigma2.u + sigma2.x) #0.8
#lambda1<-sd(d.sub$x)^2 / (sigma2.u + sd(d.sub$x)^2) #0.8
df<-rbind(data.frame(value = true.slope,label = "truth"),
data.frame(value = m.slope/lambda,label = "adjusted.measured"),
data.frame(value = m.slope,label = "measured "),
data.frame(value = ms.slope,label = "truncted measurements"),
data.frame(value = ms.slope/lambda,label = "adjusted truncted measurements"))
ggplot(data = df)+
geom_histogram(aes(x = value,color = label),fill = "white",bins = 100)+
ggtitle("X normal, indepedent from Z")
